//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeamBoard.TeamBoardService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TeamBoardService.ITeamBoardService", CallbackContract=typeof(TeamBoard.TeamBoardService.ITeamBoardServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ITeamBoardService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/ProcessCommand")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.SetUserPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateProject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateTaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateUserStoryStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.AddTaskStatusToUserStoryStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TeamMemberRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserPhotoSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.ProjectCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TaskStatusCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserStoryStatusCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TaskStatusToUserStoryStatusAdded))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TeamMemberAdded))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void ProcessCommand(object command);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/ProcessCommand")]
        System.Threading.Tasks.Task ProcessCommandAsync(object command);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/Ping")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/Ping")]
        System.Threading.Tasks.Task PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeamBoardServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/HandleEvent")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.SetUserPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateProject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateTaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateUserStoryStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.AddTaskStatusToUserStoryStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TeamMemberRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserPhotoSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.ProjectCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TaskStatusCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserStoryStatusCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TaskStatusToUserStoryStatusAdded))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TeamMemberAdded))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void HandleEvent(object @event);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/HandleHistory")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.SetUserPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateProject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateTaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.CreateUserStoryStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Commands.AddTaskStatusToUserStoryStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TeamMemberRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserPhotoSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.ProjectCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TaskStatusCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.UserStoryStatusCreated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TaskStatusToUserStoryStatusAdded))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TeamBoard.Events.TeamMemberAdded))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void HandleHistory(object[] events);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITeamBoardService/PingBack")]
        void PingBack();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeamBoardServiceChannel : TeamBoard.TeamBoardService.ITeamBoardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeamBoardServiceClient : System.ServiceModel.DuplexClientBase<TeamBoard.TeamBoardService.ITeamBoardService>, TeamBoard.TeamBoardService.ITeamBoardService {
        
        public TeamBoardServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TeamBoardServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TeamBoardServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TeamBoardServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TeamBoardServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ProcessCommand(object command) {
            base.Channel.ProcessCommand(command);
        }
        
        public System.Threading.Tasks.Task ProcessCommandAsync(object command) {
            return base.Channel.ProcessCommandAsync(command);
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
