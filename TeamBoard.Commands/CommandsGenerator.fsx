open System
open System.IO

//===================================================

let stamp = String.Format("//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the \"{0}\" script.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
", __SOURCE_FILE__)

type argument =
    {
        Name: string
        Type: Type
    }   

let arg (argName:string) (argType:Type) = {argument.Name = argName; Type = argType}

let fieldTempate = "
        [<field: DataMember(Name = \"{0}@\")>]
        {0}: {1}
"
let recordTemplate = "
[<DataContract>]
type {0} = 
    {{{1}    }}
    interface ICommand
"
let record name args =
    String.Format(recordTemplate, name, args |> List.choose (fun x -> Some(String.Format(fieldTempate, x.Name, x.Type.Name))) |> List.reduce (fun x y -> x + y))

let Generate elements = File.WriteAllText (Path.Combine(__SOURCE_DIRECTORY__, "Commands.fs"), List.reduce (fun x y -> x + y) (stamp::elements))

let command = record

//===================================================

let header = "
namespace TeamBoard.Commands

open System
open System.Runtime.Serialization
"

// Types
let Guid name = arg name typeof<Guid>
let string name = arg name typeof<string>
let int name = arg name typeof<int>


// Fields
let id = arg "Id" typeof<Guid>
let caption = arg "Caption" typeof<string>
let userName = arg "UserName" typeof<string>
let originalVersion = int "OriginalVersion"

let userId = Guid "UserId"
let projectId = Guid "ProjectId"


// Events
let commands = [
                command "CreateUser" [userId; string "Login"; string "Password"; string "Name"]
                command "SetUserPhoto" [userId; arg "Photo" typeof<byte[]>; originalVersion]

                command "CreateProject" [projectId; Guid "CreatorId"; caption]
                command "CreateTaskStatus" [projectId; string "TaskStatusCaption"; originalVersion]
                command "CreateUserStoryStatus" [projectId; string "UserStoryStatusCaption"; originalVersion]
                command "AddTaskStatusToUserStoryStatus" [projectId; int "UserStoryPosition"; int "TaskStatusPosition"; originalVersion]
             ]

Generate (header::commands)